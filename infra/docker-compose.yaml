name: orel-inst-app
services:
  mongo:
    image: mongo:latest
    restart: always
    volumes:
      - mongo_data:/data/db
      - mongo_config:/data/configdb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"
    networks:
      - service_network
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH: false
    networks:
      - service_network
  web:
    build:
      context: ../.
      dockerfile: Dockerfile
    env_file:
      - ../.env
    ports:
      - "8000:8000"
    volumes:
      - app_data:/app/db
    entrypoint: >
          sh -c "
            echo 'Applying migrations' &&
            alembic upgrade head &&
            echo 'Filling database...' &&
            python3 tools/fill_db_base_users_data.py &&
            python3 tools/fill_db_payment_data.py &&
            python3 tools/fill_db_production_calendar.py &&
            python3 tools/fill_db_staff_data.py
            echo 'Creating Collections' &&
            python3 tools/create_mongo_db_collections.py &&
            echo 'Starting project...' &&
            gunicorn --bind=0.0.0.0 --timeout=200 wsgi:app
          "
    environment:
      DATABASE_URL: sqlite:////app/db/app.db
      MONGO_DB_USER: root
      MONGO_DB_PASS: example
      MONGO_DB_URL: mongo:27017
      MONGO_DB_NAME: organization_staff
      MONGO_DB_AUTH_SOURCE: admin
      MONGO_DB_AUTH_MECHANISM: DEFAULT
    networks:
      - service_network
    restart: always
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - web
    networks:
      - service_network
volumes:
  mongo_data:
  mongo_config:
  app_data:
networks:
  service_network:
    name: service_network